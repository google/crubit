# Part of the Crubit project, under the Apache License v2.0 with LLVM
# Exceptions. See /LICENSE for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# Automatically @generated Cargo.toml for the Rust crate rs_bindings_from_cc_generate_function.

[package]
name = "rs_bindings_from_cc_generate_function"
edition.workspace = true

license-file.workspace = true
repository.workspace = true
categories.workspace = true

[lib]
path = "../../../../rs_bindings_from_cc/generate_bindings/generate_function.rs"

[dependencies]
generate_comment = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/generate_comment", package = "rs_bindings_from_cc_generate_comment"}
generate_function_thunk = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/generate_function_thunk", package = "rs_bindings_from_cc_generate_function_thunk"}
has_bindings = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/has_bindings", package = "rs_bindings_from_cc_has_bindings"}
arc_anyhow = { path = "../../../../cargo/common/arc_anyhow"}
code_gen_utils = { path = "../../../../cargo/common/code_gen_utils"}
crubit_abi_type = { path = "../../../../cargo/common/crubit_abi_type"}
crubit_feature = { path = "../../../../cargo/common/crubit_feature"}
error_report = { path = "../../../../cargo/common/error_report"}
errors = { path = "../../../../cargo/common/errors"}
ir = { path = "../../../../cargo/rs_bindings_from_cc/ir"}
database = { path = "../../../../cargo/rs_bindings_from_cc/generate_bindings/database/database", package = "rs_bindings_from_cc_database"}
flagset.workspace = true
itertools.workspace = true
proc-macro2.workspace = true
quote.workspace = true
syn.workspace = true
rustversion.workspace = true
